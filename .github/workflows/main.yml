name: Deploy to FTP

on:
  push:
    branches:
      - main  # или другая основная ветка
    paths-ignore:
      - 'README.md'  # игнорировать изменения в определенных файлах
      - 'docs/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # установить таймаут для задания

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # обновленная версия action

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # указать конкретную версию Node.js
          cache: 'npm'  # включить кэширование зависимостей

      - name: Install dependencies
        run: |
          npm ci  # использовать npm ci для воспроизводимой установки
          npm run lint  # добавить проверку кода

      - name: Run tests
        run: npm test  # добавить выполнение тестов

      - name: Build project
        run: |
          npm run generate
          echo "Build completed"

      - name: Verify build output
        run: |
          echo "Checking build output directory..."
          ls -la .output/public/  # проверить содержимое директории
          echo "Directory contents:"
          find .output/public/ -type f  # вывести список всех файлов

      - name: Cleanup previous deployment
        run: |
          # Очистить целевую директорию перед деплоем
          echo "Cleaning up previous deployment..."
          rm -rf .output/public/*

      - name: FTP Deploy
        if: success()
        uses: SamKirkland/FTP-Deploy-Action@v4  # обновленная версия action
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: .output/public/
          server-dir: /
          exclude: '**/.git*'  # исключить ненужные файлы
          allow: '**/*'  # указать, какие файлы нужно развернуть

      - name: Deployment complete
        if: success()
        run: echo "Deployment to FTP completed successfully!"